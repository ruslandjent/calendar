{"version":3,"sources":["shared/context.tsx","assets/images/arrow.svg","shared/components/Arrow/index.tsx","shared/defaults.ts","shared/functions/sleep.ts","components/Calendar/components/Header/index.tsx","shared/functions/generateMonthMatrix.ts","components/Calendar/components/TableCell/index.tsx","components/Calendar/components/TableRow/index.tsx","components/Calendar/components/MonthMatrix/index.tsx","shared/hooks/useSelectedDates.tsx","shared/functions/getDatesRange.ts","components/Calendar/components/TableBody/index.tsx","shared/hooks/useMonthMatrix.tsx","components/Calendar/components/TableHeader/index.tsx","shared/pipes/guid.ts","components/Calendar/components/Table/index.tsx","components/Calendar/index.tsx","App.tsx","index.tsx"],"names":["Context","React","createContext","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","id","fillRule","clipRule","d","fill","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","Arrow","direction","className","weekDaysTitles","monthsTitles","sleep","ms","Promise","resolve","setTimeout","Header","useContext","year","month","setMonth","setYear","setIsLeftAnimated","setIsRightAnimated","isLeftAnimated","isRightAnimated","handleMonthSwitch","type","a","y","m","dateStr","classNames","onClick","generateMonthMatrix","hardCodedDisabledDates","date","Date","startDate","startOfWeek","weekStartsOn","Array","from","matrixColumns","map","_","idx","addDays","day","getDate","toString","disabled","some","_idx","reduce","acc","dates","isEndOfWeekDay","nextWeek","slice","TableCell","dayStr","isCurrent","isAnotherMonth","isActive","useState","isAnimated","setIsAnimated","useEffect","animationDelay","e","valueOf","shiftKey","TableRow","row","handleCellClick","selectedDates","cell","isToday","getMonth","MonthMatrix","matrix","setSelectedDates","db","JSON","parse","localStorage","getItem","setItem","stringify","useSelectedDates","isInitialClick","setIsInitialClick","disabledDates","flatMap","filter","item","shiftPressed","prevDates","dt","datesRange","start","interval","end","eachDayOfInterval","getDatesRange","every","disabledDate","TableBody","setMatrix","useMonthMatrix","currentMonthMatrix","tBody","TableHeader","replace","c","r","Math","random","Table","Calendar","now","getYear","providerValue","Provider","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20d73385.chunk.js","sourcesContent":["import React, {SetStateAction, Dispatch} from 'react';\r\n\r\nexport interface IContext {\r\n  month: number;\r\n  year: number;\r\n  setMonth: Dispatch<SetStateAction<number>>;\r\n  setYear: Dispatch<SetStateAction<number>>;\r\n  isLeftAnimated: boolean;\r\n  isRightAnimated: boolean;\r\n  setIsLeftAnimated: Dispatch<SetStateAction<boolean>>;\r\n  setIsRightAnimated: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const Context = React.createContext<IContext>({} as IContext);\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"ar_left\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M5.5575 8.4425L2.1225 5L5.5575 1.5575L4.5 0.5L0 5L4.5 9.5L5.5575 8.4425Z\",\n  fill: \"#707070\"\n});\n\nvar SvgArrow = function SvgArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 10,\n    viewBox: \"0 0 6 10\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow.511e1249.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport {ReactComponent as ArrowLogo} from '../../../assets/images/arrow.svg';\r\n\r\ninterface IArrowProps {\r\n  direction: 'left' | 'right';\r\n}\r\n\r\nexport const Arrow: React.FC<IArrowProps> = ({direction}) => {\r\n  const className = `arrow ${direction === 'left' ? 'arrow--left' : 'arrow--right'}`;\r\n\r\n  return <ArrowLogo className={className} width={8} height={12} />;\r\n};\r\n","export const weekDaysTitles: string[] = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'];\r\nexport const monthsTitles: string[] = [\r\n  'Январь',\r\n  'Февраль',\r\n  'Март',\r\n  'Апрель',\r\n  'Май',\r\n  'Июнь',\r\n  'Июль',\r\n  'Август',\r\n  'Сентябрь',\r\n  'Октябрь',\r\n  'Ноябрь',\r\n  'Декабрь',\r\n];\r\n\r\nexport const animationDelay = 1000;\r\n","export const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n","import React, {useContext} from 'react';\r\nimport {Context} from '../../../../shared/context';\r\n\r\nimport {Arrow} from '../../../../shared/components/Arrow';\r\nimport {animationDelay, monthsTitles} from '../../../../shared/defaults';\r\nimport {sleep} from '../../../../shared/functions/sleep';\r\n\r\ntype SwitchType = 'prev' | 'next';\r\n\r\nexport const Header: React.FC = () => {\r\n  const {\r\n    year,\r\n    month,\r\n    setMonth,\r\n    setYear,\r\n    setIsLeftAnimated,\r\n    setIsRightAnimated,\r\n    isLeftAnimated,\r\n    isRightAnimated,\r\n  } = useContext(Context);\r\n\r\n  const handleMonthSwitch = async (type: SwitchType) => {\r\n    if (isLeftAnimated || isRightAnimated) return;\r\n\r\n    if (type === 'prev') {\r\n      setIsLeftAnimated(true);\r\n\r\n      if (month === 0) {\r\n        setYear(y => y - 1);\r\n        setMonth(11);\r\n      } else setMonth(m => m - 1);\r\n\r\n      await sleep(animationDelay);\r\n      setIsLeftAnimated(false);\r\n    }\r\n\r\n    if (type === 'next') {\r\n      setIsRightAnimated(true);\r\n\r\n      if (month === 11) {\r\n        setYear(y => y + 1);\r\n        setMonth(0);\r\n      } else setMonth(m => m + 1);\r\n\r\n      await sleep(animationDelay);\r\n      setIsRightAnimated(false);\r\n    }\r\n  };\r\n\r\n  const dateStr = `${monthsTitles[month]} ${year}`;\r\n  const classNames = {\r\n    header: 'calendar__header header',\r\n    dateStr: 'header__date',\r\n    headerBtn: 'header__btn',\r\n  };\r\n\r\n  return (\r\n    <div className={classNames.header}>\r\n      <button type='button' className={classNames.headerBtn} onClick={() => handleMonthSwitch('prev')}>\r\n        <Arrow direction='left' />\r\n      </button>\r\n      <span className={classNames.dateStr}>{dateStr}</span>\r\n      <button type='button' className={classNames.headerBtn} onClick={() => handleMonthSwitch('next')}>\r\n        <Arrow direction='right' />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import {addDays, startOfWeek, getDate} from 'date-fns';\r\n\r\nexport type MonthMatrixCell = {\r\n  date: Date;\r\n  day: string;\r\n  disabled: boolean;\r\n};\r\n\r\nexport type MonthMatrix = MonthMatrixCell[][];\r\n\r\nexport const generateMonthMatrix = (year: number, month: number): MonthMatrix => {\r\n  const hardCodedDisabledDates = [1, 2, 3, 5, 8];\r\n  const weekStartsOn = 1;\r\n  const matrixColumns = 7;\r\n  const matrixRows = 5;\r\n  const date = new Date(year, month);\r\n\r\n  const startDate = startOfWeek(date, {weekStartsOn});\r\n  const totalDays = matrixColumns * matrixRows;\r\n\r\n  const matrix = Array.from({length: totalDays})\r\n    .map((_, idx) => addDays(startDate, idx))\r\n    .map(\r\n      (date, idx): MonthMatrixCell => ({\r\n        date,\r\n        day: getDate(date).toString(),\r\n        disabled: hardCodedDisabledDates.some(_idx => _idx === idx),\r\n      }),\r\n    )\r\n    .reduce((acc, _, idx, dates) => {\r\n      const isEndOfWeekDay = idx % matrixColumns === 0;\r\n      const nextWeek = dates.slice(idx, idx + matrixColumns);\r\n\r\n      return isEndOfWeekDay ? [...acc, nextWeek] : acc;\r\n    }, [] as MonthMatrix);\r\n\r\n  return matrix;\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport {animationDelay} from '../../../../shared/defaults';\r\n\r\ninterface ITableCellProps {\r\n  dayStr: string;\r\n  date: Date;\r\n  isCurrent: boolean;\r\n  isActive: boolean;\r\n  isAnotherMonth: boolean;\r\n  onClick: (number: number, shiftPressed: boolean) => void;\r\n  disabled: boolean;\r\n}\r\n\r\nexport const TableCell: React.FC<ITableCellProps> = ({\r\n  dayStr,\r\n  isCurrent,\r\n  isAnotherMonth,\r\n  onClick,\r\n  date,\r\n  isActive,\r\n  disabled,\r\n}) => {\r\n  const [isAnimated, setIsAnimated] = useState(false);\r\n  useEffect(() => {\r\n    setTimeout(() => setIsAnimated(true), animationDelay / 2);\r\n  }, []);\r\n\r\n  const classNames = {\r\n    cell: 'table-body__cell',\r\n    current: 'table-body__cell table-body__cell--current',\r\n    active: 'table-body__cell table-body__cell--active',\r\n    anotherMonth: 'table-body__cell table-body__cell--anotherMonth',\r\n    disabled: 'table-body__cell table-body__cell--disabled',\r\n  };\r\n  const className = `${\r\n    disabled\r\n      ? classNames.disabled\r\n      : isActive && isAnimated\r\n      ? classNames.active\r\n      : isCurrent\r\n      ? classNames.current\r\n      : isAnotherMonth\r\n      ? classNames.anotherMonth\r\n      : classNames.cell\r\n  }`;\r\n  return (\r\n    <span className={className} onClick={e => (disabled ? null : onClick(date.valueOf(), e.shiftKey))}>\r\n      {dayStr}\r\n    </span>\r\n  );\r\n};\r\n","import {getMonth, isToday} from 'date-fns/esm';\r\nimport React from 'react';\r\nimport {MonthMatrixCell} from '../../../../shared/functions/generateMonthMatrix';\r\nimport {TableCell} from '../TableCell';\r\n\r\ninterface ITableRowProps {\r\n  handleCellClick: (date: number, shiftPressed: boolean) => void;\r\n  row: MonthMatrixCell[];\r\n  month: number;\r\n  selectedDates: number[];\r\n}\r\n\r\nexport const TableRow: React.FC<ITableRowProps> = ({row, handleCellClick, month, selectedDates}) => {\r\n  const classNames = {\r\n    tBodyRow: 'table-body__row',\r\n  };\r\n  return (\r\n    <li className={classNames.tBodyRow}>\r\n      {row.map(cell => (\r\n        <TableCell\r\n          key={cell.date.toString()}\r\n          dayStr={cell.day}\r\n          isCurrent={isToday(cell.date)}\r\n          isAnotherMonth={month !== getMonth(cell.date)}\r\n          date={cell.date}\r\n          onClick={handleCellClick}\r\n          isActive={selectedDates.some(date => date === cell.date.valueOf())}\r\n          disabled={cell.disabled}\r\n        />\r\n      ))}\r\n    </li>\r\n  );\r\n};\r\n","import React, {useState, useContext} from 'react';\r\nimport {Context} from '../../../../shared/context';\r\n\r\nimport {MonthMatrix as _MonthMatrix} from '../../../../shared/functions/generateMonthMatrix';\r\nimport {getDatesRange} from '../../../../shared/functions/getDatesRange';\r\nimport {useSelectedDates} from '../../../../shared/hooks/useSelectedDates';\r\nimport {TableRow} from '../TableRow';\r\n\r\ninterface IMonthMatrix {\r\n  matrix: _MonthMatrix;\r\n}\r\n\r\nexport const MonthMatrix: React.FC<IMonthMatrix> = ({matrix}) => {\r\n  const {month} = useContext(Context);\r\n  const [selectedDates, setSelectedDates] = useSelectedDates();\r\n  const [isInitialClick, setIsInitialClick] = useState(true);\r\n  const disabledDates: number[] = matrix\r\n    .flatMap(row => row.filter(cell => cell.disabled))\r\n    .map(item => item.date.valueOf());\r\n\r\n  const handleCellClick = (date: number, shiftPressed: boolean) => {\r\n    setSelectedDates(prevDates => {\r\n      return prevDates.some(dt => dt === date) ? prevDates.filter(dt => dt !== date) : [...prevDates, date];\r\n    });\r\n\r\n    if (shiftPressed && !isInitialClick) {\r\n      const datesRange = getDatesRange(date, selectedDates)?.filter(dt =>\r\n        disabledDates.every(disabledDate => disabledDate !== dt),\r\n      );\r\n      setSelectedDates(prevDates => (datesRange ? [...prevDates, ...datesRange] : [date]));\r\n    }\r\n\r\n    setIsInitialClick(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {matrix.map((row, idx) => (\r\n        <TableRow row={row} key={idx} handleCellClick={handleCellClick} month={month} selectedDates={selectedDates} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nexport const useSelectedDates = () => {\r\n  const [selectedDates, setSelectedDates] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    const db = JSON.parse(localStorage.getItem('selectedDates') || '[]') as number[];\r\n    setSelectedDates(db);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedDates', JSON.stringify(selectedDates));\r\n  }, [selectedDates]);\r\n\r\n  return [selectedDates, setSelectedDates] as const;\r\n};\r\n","import {eachDayOfInterval, Interval} from 'date-fns';\r\n\r\nexport const getDatesRange = (date: number, selectedDates: number[]): number[] | null => {\r\n  const start = selectedDates[selectedDates.length - 1];\r\n  const end = date;\r\n\r\n  // strange code because of `eachDayOfInterval()`'s\r\n  // inability to find a range between older date and newer date\r\n  const interval: Interval = {\r\n    start: start < end ? start : end,\r\n    end: end > start ? end : start,\r\n  };\r\n\r\n  if (!start) return null;\r\n\r\n  return (\r\n    eachDayOfInterval(interval)\r\n      .map(dt => dt.valueOf())\r\n      // deleting first and last elements of an array, because they are already exist\r\n      .slice(1, -1)\r\n  );\r\n};\r\n","import React, {useContext} from 'react';\r\n\r\nimport {Context} from '../../../../shared/context';\r\nimport {useMonthMatrix} from '../../../../shared/hooks/useMonthMatrix';\r\nimport {MonthMatrix} from '../MonthMatrix';\r\n\r\nexport const TableBody: React.FC = () => {\r\n  const {month, year, isLeftAnimated, isRightAnimated} = useContext(Context);\r\n  const [currentMonthMatrix] = useMonthMatrix(year, month);\r\n\r\n  const classNames = {\r\n    tBody: `table__body table-body reset-list ${\r\n      isLeftAnimated ? 'table__body--animatedPrev' : isRightAnimated ? 'table__body--animatedNext' : ''\r\n    }`,\r\n  };\r\n\r\n  return (\r\n    <ul className={classNames.tBody}>\r\n      <MonthMatrix matrix={currentMonthMatrix} />\r\n    </ul>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {generateMonthMatrix, MonthMatrix} from '../functions/generateMonthMatrix';\r\n\r\nexport const useMonthMatrix = (year: number, month: number): MonthMatrix[] => {\r\n  const [matrix, setMatrix] = useState<MonthMatrix>(generateMonthMatrix(year, month));\r\n\r\n  useEffect(() => setMatrix(generateMonthMatrix(year, month)), [year, month]);\r\n\r\n  return [matrix];\r\n};\r\n","import React from 'react';\r\n\r\nimport {weekDaysTitles} from '../../../../shared/defaults';\r\nimport {newGuid} from '../../../../shared/pipes/guid';\r\n\r\nexport const TableHeader: React.FC = () => {\r\n  const classNames = {\r\n    tableHead: 'table__head table-head',\r\n    tableHeadRow: 'table-head__row reset-list',\r\n    tableHeadCell: 'table-head__cell',\r\n  };\r\n  return (\r\n    <div className={classNames.tableHead}>\r\n      <ul className={classNames.tableHeadRow}>\r\n        {weekDaysTitles.map(title => (\r\n          <li className={classNames.tableHeadCell} key={newGuid()}>\r\n            {title}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","export const newGuid = (): string => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n","import React from 'react';\r\n\r\nimport {TableBody} from '../TableBody';\r\nimport {TableHeader} from '../TableHeader';\r\n\r\nexport const Table: React.FC = () => {\r\n  const classNames = {\r\n    table: 'calendar__table table',\r\n    wrapper: 'calendar__table-wrapper',\r\n  };\r\n  return (\r\n    <div className={classNames.wrapper}>\r\n      <div className={classNames.table}>\r\n        <TableHeader />\r\n        <TableBody />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from 'react';\r\nimport {getMonth, getYear} from 'date-fns';\r\n\r\nimport {Header} from './components/Header';\r\nimport {Table} from './components/Table';\r\nimport {Context} from '../../shared/context';\r\n\r\nexport const Calendar: React.FC = () => {\r\n  const now = Date.now();\r\n\r\n  const [month, setMonth] = useState<number>(getMonth(now));\r\n  const [year, setYear] = useState<number>(getYear(now));\r\n\r\n  const [isLeftAnimated, setIsLeftAnimated] = useState<boolean>(false);\r\n  const [isRightAnimated, setIsRightAnimated] = useState<boolean>(false);\r\n\r\n  const providerValue = {\r\n    month,\r\n    year,\r\n    setMonth,\r\n    setYear,\r\n    isLeftAnimated,\r\n    isRightAnimated,\r\n    setIsLeftAnimated,\r\n    setIsRightAnimated,\r\n  };\r\n\r\n  const classNames = {\r\n    calendar: 'calendar',\r\n    wrapper: 'calendar__wrapper',\r\n  };\r\n\r\n  return (\r\n    <div className={classNames.calendar}>\r\n      <div className={classNames.wrapper}>\r\n        <Context.Provider value={providerValue}>\r\n          <Header />\r\n          <Table />\r\n        </Context.Provider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Calendar} from './components/Calendar';\r\n\r\nexport const App: React.FC = () => {\r\n  return <Calendar />;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport './scss/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}